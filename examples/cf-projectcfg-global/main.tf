# Copyright 2025 METRO Digital GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module "projectcfg" {
  source     = "metro-digital/cf-projectcfg/google"
  version    = "~> 3.2"
  project_id = local.project_id

  # ...

  service_accounts = {
    "terraform-iac-pipeline" = {
      display_name = "Terraform IaC pipelines"
      description  = "Service account used in IaC pipeline"
      iam_policy = [
        {
          role = "roles/iam.serviceAccountTokenCreator"
          members = [
            local.iam_manager_group,
            local.iam_iac_service_account
          ]
        }
      ]
      project_iam_policy_roles = [
        # Permissions needed to manage resources generated by this module
        # and additionally those required by the cf-cloudarmor-policy module
        # See also: README.md of cf-cloudarmor-policy module
        "roles/compute.admin",
        "roles/dns.admin",
        "roles/iam.roleAdmin",
        "roles/iam.securityAdmin",
        "roles/iam.serviceAccountAdmin",
        "roles/serviceusage.serviceUsageAdmin",
        "roles/storage.admin",
        "roles/storage.objectAdmin",
      ]
    }
    # ...
  }

  enabled_services = [
    "compute.googleapis.com",
    "recaptchaenterprise.googleapis.com",
    # ...
  ]

  # ...
}

# Create a Cloud Armor implementing METROs baseline.
module "cloudarmor_policy" {
  source     = "metro-digital/cf-cloudarmor-policy/google"
  version    = "~> 0.1"
  project_id = module.projectcfg.project_id

  automatic_service_enablement = false

  adaptive_protection_auto_deploy_overwrites = {
    # Configure all rules proposed by Cloud Armor Adaptive Protection to run in
    # preview-only mode. This allows you to first evaluate if Adaptive
    # Protection plays well with your normal traffic before it starts blocking
    # requests. As soon as you get confident, the preview mode should be
    # disabled again!
    preview = true
  }

  depends_on = [
    module.projectcfg
  ]
}
